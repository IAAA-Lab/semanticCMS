/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.docs.datosGob.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.docs.datosGob.model.Titulo;
import com.liferay.docs.datosGob.model.TituloModel;
import com.liferay.docs.datosGob.model.TituloSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.petra.string.StringBundler;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Titulo service. Represents a row in the &quot;DB_Titulo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link TituloModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TituloImpl}.
 * </p>
 *
 * @author liferay
 * @see TituloImpl
 * @see Titulo
 * @see TituloModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class TituloModelImpl extends BaseModelImpl<Titulo>
	implements TituloModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a titulo model instance should use the {@link Titulo} interface instead.
	 */
	public static final String TABLE_NAME = "DB_Titulo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "tituloId", Types.BIGINT },
			{ "titulo", Types.VARCHAR },
			{ "datasetId", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("tituloId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("titulo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("datasetId", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table DB_Titulo (uuid_ VARCHAR(75) null,groupId LONG,tituloId LONG not null primary key,titulo VARCHAR(75) null,datasetId VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table DB_Titulo";
	public static final String ORDER_BY_JPQL = " ORDER BY titulo.tituloId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY DB_Titulo.tituloId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.docs.datosGob.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.docs.datosGob.model.Titulo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.docs.datosGob.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.docs.datosGob.model.Titulo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.docs.datosGob.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.docs.datosGob.model.Titulo"),
			true);
	public static final long DATASETID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long UUID_COLUMN_BITMASK = 4L;
	public static final long TITULOID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Titulo toModel(TituloSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Titulo model = new TituloImpl();

		model.setUuid(soapModel.getUuid());
		model.setGroupId(soapModel.getGroupId());
		model.setTituloId(soapModel.getTituloId());
		model.setTitulo(soapModel.getTitulo());
		model.setDatasetId(soapModel.getDatasetId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Titulo> toModels(TituloSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Titulo> models = new ArrayList<Titulo>(soapModels.length);

		for (TituloSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.docs.datosGob.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.docs.datosGob.model.Titulo"));

	public TituloModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tituloId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTituloId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tituloId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Titulo.class;
	}

	@Override
	public String getModelClassName() {
		return Titulo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("groupId", getGroupId());
		attributes.put("tituloId", getTituloId());
		attributes.put("titulo", getTitulo());
		attributes.put("datasetId", getDatasetId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long tituloId = (Long)attributes.get("tituloId");

		if (tituloId != null) {
			setTituloId(tituloId);
		}

		String titulo = (String)attributes.get("titulo");

		if (titulo != null) {
			setTitulo(titulo);
		}

		String datasetId = (String)attributes.get("datasetId");

		if (datasetId != null) {
			setDatasetId(datasetId);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getTituloId() {
		return _tituloId;
	}

	@Override
	public void setTituloId(long tituloId) {
		_tituloId = tituloId;
	}

	@JSON
	@Override
	public String getTitulo() {
		if (_titulo == null) {
			return "";
		}
		else {
			return _titulo;
		}
	}

	@Override
	public void setTitulo(String titulo) {
		_titulo = titulo;
	}

	@JSON
	@Override
	public String getDatasetId() {
		if (_datasetId == null) {
			return "";
		}
		else {
			return _datasetId;
		}
	}

	@Override
	public void setDatasetId(String datasetId) {
		_columnBitmask |= DATASETID_COLUMN_BITMASK;

		if (_originalDatasetId == null) {
			_originalDatasetId = _datasetId;
		}

		_datasetId = datasetId;
	}

	public String getOriginalDatasetId() {
		return GetterUtil.getString(_originalDatasetId);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Titulo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Titulo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Titulo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TituloImpl tituloImpl = new TituloImpl();

		tituloImpl.setUuid(getUuid());
		tituloImpl.setGroupId(getGroupId());
		tituloImpl.setTituloId(getTituloId());
		tituloImpl.setTitulo(getTitulo());
		tituloImpl.setDatasetId(getDatasetId());

		tituloImpl.resetOriginalValues();

		return tituloImpl;
	}

	@Override
	public int compareTo(Titulo titulo) {
		long primaryKey = titulo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Titulo)) {
			return false;
		}

		Titulo titulo = (Titulo)obj;

		long primaryKey = titulo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		TituloModelImpl tituloModelImpl = this;

		tituloModelImpl._originalUuid = tituloModelImpl._uuid;

		tituloModelImpl._originalGroupId = tituloModelImpl._groupId;

		tituloModelImpl._setOriginalGroupId = false;

		tituloModelImpl._originalDatasetId = tituloModelImpl._datasetId;

		tituloModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Titulo> toCacheModel() {
		TituloCacheModel tituloCacheModel = new TituloCacheModel();

		tituloCacheModel.uuid = getUuid();

		String uuid = tituloCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			tituloCacheModel.uuid = null;
		}

		tituloCacheModel.groupId = getGroupId();

		tituloCacheModel.tituloId = getTituloId();

		tituloCacheModel.titulo = getTitulo();

		String titulo = tituloCacheModel.titulo;

		if ((titulo != null) && (titulo.length() == 0)) {
			tituloCacheModel.titulo = null;
		}

		tituloCacheModel.datasetId = getDatasetId();

		String datasetId = tituloCacheModel.datasetId;

		if ((datasetId != null) && (datasetId.length() == 0)) {
			tituloCacheModel.datasetId = null;
		}

		return tituloCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", tituloId=");
		sb.append(getTituloId());
		sb.append(", titulo=");
		sb.append(getTitulo());
		sb.append(", datasetId=");
		sb.append(getDatasetId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.liferay.docs.datosGob.model.Titulo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tituloId</column-name><column-value><![CDATA[");
		sb.append(getTituloId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>titulo</column-name><column-value><![CDATA[");
		sb.append(getTitulo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>datasetId</column-name><column-value><![CDATA[");
		sb.append(getDatasetId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Titulo.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Titulo.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _tituloId;
	private String _titulo;
	private String _datasetId;
	private String _originalDatasetId;
	private long _columnBitmask;
	private Titulo _escapedModel;
}